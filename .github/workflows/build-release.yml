name: Build and Release JAR

on:
  workflow_dispatch:
  push:
    branches:
      - pojav
    paths:
      - "src/**"
      - "pom.xml"

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'

      - name: Build with Maven
        run: mvn package -DskipTests

      - name: Compute SHA1 and file size
        run: |
          JAR_FILE=$(ls target/*.jar | head -n 1)
          if [[ -z "$JAR_FILE" ]]; then
            echo "Error: No JAR file found in target/"
            exit 1
          fi
          SHA1=$(sha1sum "$JAR_FILE" | awk '{print $1}')
          SIZE=$(stat -c%s "$JAR_FILE")
          JAR_NAME=$(basename "$JAR_FILE")

          echo "SHA1=$SHA1" >> $GITHUB_ENV
          echo "SIZE=$SIZE" >> $GITHUB_ENV
          echo "JAR_NAME=$JAR_NAME" >> $GITHUB_ENV

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: built-jar
          path: target/*.jar

      - name: Upload JSON artifact
        uses: actions/upload-artifact@v4
        with:
          name: manifest
          path: release/sigma-jello-5.1.0.json

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Git user
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Download built JAR
        uses: actions/download-artifact@v4
        with:
          name: built-jar
          path: target/

      - name: Download JSON artifact
        uses: actions/download-artifact@v4
        with:
          name: manifest
          path: release/

      - name: Verify JSON file exists
        run: ls -l release/

      - name: Compute SHA1 and file size again
        run: |
          JAR_FILE=$(ls target/*.jar | head -n 1)
          SHA1=$(sha1sum "$JAR_FILE" | awk '{print $1}')
          SIZE=$(stat -c%s "$JAR_FILE")

          echo "SHA1=$SHA1" >> $GITHUB_ENV
          echo "SIZE=$SIZE" >> $GITHUB_ENV

      - name: Update sigma-jello-5.1.0.json
        run: |
          JSON_FILE="release/sigma-jello-5.1.0.json"
          URL="https://github.com/Sigma-Skidder-Team/SigmaRebase/releases/download/pojav-nightly/sigma-jello-5.1.0.jar"

          jq --arg sha1 "$SHA1" --argjson size "$SIZE" --arg url "$URL" \
          '.downloads.client = { "sha1": $sha1, "size": $size, "url": $url }' \
          "$JSON_FILE" > temp.json && mv temp.json "$JSON_FILE"

      - name: Create and push tag
        run: |
          git push origin :refs/tags/pojav-nightly
          git tag -f pojav-nightly
          git push origin pojav-nightly

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: pojav-nightly
          prerelease: true
          files: |
            target/*.jar
            release/sigma-jello-5.1.0-pojav.json